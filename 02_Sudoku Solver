class Solution {
    public boolean solveSudoku(char[][] board) {
        for(int row=0;row<9;row++) {
            for(int col=0;col<9;col++) {
                if(board[row][col]!='.')
                    continue;
                for(int i=49;i<=57;i++) {
                    if(isSafe(board,(char)i,row,col)) {
                        board[row][col]=(char)i;
                        if(solveSudoku(board))
                            return true;
                        else
                            board[row][col]='.';
                    }
                }
                return false;
            }
        }
        return true;
    }
    
    boolean isSafe(char[][] arr,char ch,int row,int col) {
        for(int i=0;i<9;i++) {
            if(arr[row][i]==ch)
                return false;
            if(arr[i][col]==ch)
                return false;
            if(arr[3*(row/3)+(i/3)][3*(col/3)+(i%3)]==ch)
                return false;
        }
        return true;
    }
}
